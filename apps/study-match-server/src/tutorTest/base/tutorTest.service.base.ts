/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, TutorTest as PrismaTutorTest } from "@prisma/client";

export class TutorTestServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TutorTestCountArgs, "select">
  ): Promise<number> {
    return this.prisma.tutorTest.count(args);
  }

  async tutorTests(
    args: Prisma.TutorTestFindManyArgs
  ): Promise<PrismaTutorTest[]> {
    return this.prisma.tutorTest.findMany(args);
  }
  async tutorTest(
    args: Prisma.TutorTestFindUniqueArgs
  ): Promise<PrismaTutorTest | null> {
    return this.prisma.tutorTest.findUnique(args);
  }
  async createTutorTest(
    args: Prisma.TutorTestCreateArgs
  ): Promise<PrismaTutorTest> {
    return this.prisma.tutorTest.create(args);
  }
  async updateTutorTest(
    args: Prisma.TutorTestUpdateArgs
  ): Promise<PrismaTutorTest> {
    return this.prisma.tutorTest.update(args);
  }
  async deleteTutorTest(
    args: Prisma.TutorTestDeleteArgs
  ): Promise<PrismaTutorTest> {
    return this.prisma.tutorTest.delete(args);
  }
}
